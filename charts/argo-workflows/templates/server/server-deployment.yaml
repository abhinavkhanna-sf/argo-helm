{{- if .Values.server.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "argo-workflows.server.fullname" . }}
  labels:
    {{- include "argo-workflows.labels" (dict "context" . "component" .Values.server.name "name" .Values.server.name) | nindent 4 }}
    app.kubernetes.io/version: {{ default .Chart.AppVersion .Values.server.image.tag | quote }}
spec:
  replicas: {{ .Values.server.replicas }}
  selector:
    matchLabels:
      {{- include "argo-workflows.selectorLabels" (dict "context" . "name" .Values.server.name) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "argo-workflows.labels" (dict "context" . "component" .Values.server.name "name" .Values.server.name) | nindent 8 }}
        app.kubernetes.io/version: {{ default .Chart.AppVersion .Values.server.image.tag | quote }}
        {{- if .Values.server.podLabels }}
        {{- toYaml .Values.server.podLabels | nindent 8 }}
        {{- end }}
      {{- if .Values.server.podAnnotations }}
      annotations:
{{ toYaml .Values.server.podAnnotations | indent 8}}{{- end }}
    spec:
      serviceAccountName: {{ .Values.server.serviceAccount | quote }}
      {{- if .Values.server.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.server.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: argo-server
          image: "{{ .Values.server.image.registry }}/{{ .Values.server.image.repository }}:{{ .Values.server.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          args:
          - server
          - --configmap={{ .Release.Name }}-{{ .Values.controller.name }}-configmap
          {{- if .Values.server.extraArgs }}
          {{- toYaml .Values.server.extraArgs | nindent 10 }}
          {{- end }}
          - "--secure={{ .Values.server.secure }}"
          {{- if .Values.singleNamespace }}
          - "--namespaced"
          {{- end }}
          ports:
          - name: web
            containerPort: 2746
          readinessProbe:
            httpGet:
              path: /
              port: 2746
              {{- if .Values.server.secure }}
              scheme: HTTPS
              {{- else }}
              scheme: HTTP
              {{- end }}
            initialDelaySeconds: 10
            periodSeconds: 20
          env:
          - name: IN_CLUSTER
            value: "true"
          - name: ARGO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: BASE_HREF
            value: {{ .Values.server.baseHref | quote }}
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
          volumeMounts:
          - name: tmp
            mountPath: /tmp
          {{- with .Values.server.volumeMounts }}
            {{- toYaml . | nindent 10}}
          {{- end }}
      {{- with .Values.images.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: tmp
        emptyDir: {}
      {{- with .Values.server.volumes }}
        {{- toYaml . | nindent 6}}
      {{- end }}
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.server.priorityClassName }}
      priorityClassName: {{ .Values.server.priorityClassName }}
      {{- end }}
{{- end -}}
